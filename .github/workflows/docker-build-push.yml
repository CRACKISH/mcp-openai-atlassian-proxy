name: docker-build-push

on:
    push:
        branches: [main]
        paths:
            - 'Dockerfile'
            - 'package.json'
            - 'src/**'
            - '.github/workflows/docker-build-push.yml'
    workflow_dispatch:
        inputs:
            extraTag:
                description: 'Additional image tag (optional)'
                required: false
                default: ''

concurrency:
    group: docker-${{ github.ref }}
    cancel-in-progress: false

permissions:
    contents: read
    packages: write

env:
    IMAGE_NAME: mcp-openai-atlassian-proxy

jobs:
    build-and-push:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Set up Node (for version extraction)
              uses: actions/setup-node@v4
              with:
                  node-version: '20'
                  cache: 'npm'

            - name: Install (prod) deps for version only
              run: npm ci --omit=dev

            - name: Extract version
              id: meta
              run: |
                  VERSION=$(node -p "require('./package.json').version")
                  SHORT_SHA=${GITHUB_SHA::7}
                  echo "version=${VERSION}" >> $GITHUB_OUTPUT
                  echo "short_sha=${SHORT_SHA}" >> $GITHUB_OUTPUT

            - name: Set up QEMU
              uses: docker/setup-qemu-action@v3

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Login to Docker Hub
              uses: docker/login-action@v3
              with:
                  username: ${{ secrets.DOCKER_USERNAME }}
                  password: ${{ secrets.DOCKER_PASSWORD }}

            - name: Build and push
              uses: docker/build-push-action@v6
              with:
                  context: .
                  push: true
                  platforms: linux/amd64,linux/arm64
                  tags: |
                      ${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:latest
                      ${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:v${{ steps.meta.outputs.version }}
                  cache-from: type=gha
                  cache-to: type=gha,mode=max

            - name: Summary
              run: |
                  echo "Published tags:" >> $GITHUB_STEP_SUMMARY
                  echo "- latest" >> $GITHUB_STEP_SUMMARY
                  echo "- v${{ steps.meta.outputs.version }}" >> $GITHUB_STEP_SUMMARY
                  echo "- sha-${{ steps.meta.outputs.short_sha }}" >> $GITHUB_STEP_SUMMARY
                  if [ -n "${{ github.event.inputs.extraTag }}" ]; then echo "- ${{ github.event.inputs.extraTag }}" >> $GITHUB_STEP_SUMMARY; fi
